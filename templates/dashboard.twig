{% extends "base.twig" %}

{% block content %}
<!-- Dashboard Header -->
<div class="dashboard-header mb-4">
    <h1 class="dashboard-title">Dashboard</h1>
    <p class="dashboard-subtitle">Willkommen zurück im Tierphysio Manager</p>
</div>

<!-- Stats Grid with New Design -->
<div class="stats-grid">
    <!-- Monthly Income -->
    <div class="stat-card">
        <div class="stat-icon primary">
            <i class='bx bxs-wallet'></i>
        </div>
        <div class="stat-content">
            <div class="stat-value">{{ incomeMonth|number_format(2, ',', '.') }} €</div>
            <div class="stat-label">Diesen Monat</div>
        </div>
    </div>
    
    <!-- Yearly Income -->
    <div class="stat-card">
        <div class="stat-icon success">
            <i class='bx bx-calendar'></i>
        </div>
        <div class="stat-content">
            <div class="stat-value">{{ incomeYear|number_format(2, ',', '.') }} €</div>
            <div class="stat-label">Dieses Jahr</div>
        </div>
    </div>
    
    <!-- Total Income -->
    <div class="stat-card">
        <div class="stat-icon warning">
            <i class='bx bx-line-chart'></i>
        </div>
        <div class="stat-content">
            <div class="stat-value">{{ totalIncome|number_format(2, ',', '.') }} €</div>
            <div class="stat-label">Gesamt Einnahmen</div>
        </div>
    </div>
    
    <!-- Open Invoices -->
    <div class="stat-card">
        <div class="stat-icon error">
            <i class='bx bx-error-circle'></i>
        </div>
        <div class="stat-content">
            <div class="stat-value text-error">{{ totalExpenses|number_format(2, ',', '.') }} €</div>
            <div class="stat-label">Offene Rechnungen</div>
        </div>
    </div>
</div>

{% if birthdaySuccess %}
    <div class="alert alert-success mt-4">{{ birthdaySuccess }}</div>
{% endif %}

<div class="row mt-4">
    <!-- Today's Appointments -->
    <div class="col-xl-6 d-flex">
        <div class="card w-100">
            <div class="card-header">
                <h5 class="card-title mb-0">📅 Heutige Termine</h5>
            </div>
            <div class="card-body">
                <div class="appointments-list">
                    {% for appt in appointmentsToday %}
                        <div class="appointment-item">
                            <a href="javascript:void(0);" class="open-patient-modal appointment-link" data-patient="{{ appt.patient_id }}">
                                <span class="appointment-time">{{ appt.appointment_date|date("H:i") }}</span>
                                <span class="appointment-details">
                                    <strong>{{ appt.patient_name }}</strong>
                                    <small class="text-muted">({{ appt.firstname }} {{ appt.lastname }})</small>
                                </span>
                            </a>
                        </div>
                    {% else %}
                        <p class="text-muted text-center py-3">Keine Termine heute</p>
                    {% endfor %}
                </div>
            </div>
        </div>
    </div>

    <!-- Today's Birthdays -->
    <div class="col-xl-6 d-flex">
        <div class="card w-100">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">🎂 Geburtstage heute</h5>
                    {% if birthdayOwners or birthdayPatients %}
                        <a href="dashboard.php?action=send_birthday_mails#birthdays" class="btn btn-sm btn-primary">
                            ✉️ Mails senden
                        </a>
                    {% endif %}
                </div>
            </div>
            <div class="card-body">
                {% if birthdayOwners or birthdayPatients %}
                    <div class="birthday-list">
                        {% for owner in birthdayOwners %}
                            <div class="birthday-item">
                                <span class="birthday-icon">🎉</span>
                                <span class="birthday-text">
                                    <strong>Besitzer:</strong> {{ owner.firstname }} {{ owner.lastname }}
                                </span>
                            </div>
                        {% endfor %}
                        {% for pet in birthdayPatients %}
                            <div class="birthday-item">
                                <span class="birthday-icon">🐾</span>
                                <span class="birthday-text">
                                    <strong>{{ pet.name }}</strong>
                                    <small class="text-muted">(Besitzer: {{ pet.firstname }} {{ pet.lastname }})</small>
                                </span>
                            </div>
                        {% endfor %}
                    </div>
                {% else %}
                    <p class="text-center text-muted py-3">Heute hat niemand Geburtstag 🎈</p>
                {% endif %}
            </div>
        </div>
    </div>
</div>

{# -------- Modal aus patients.twig mit Edit/Delete -------- #}
<div class="modal fade" id="patientModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
    <div class="modal-content owner-modal">
      <div class="modal-header owner-header d-flex justify-content-between align-items-center">
        <h5 class="modal-title owner-title d-flex align-items-center gap-2">
          <span class="owner-avatar" id="patientAvatar">🐾</span>
          <span id="patientName">Patient</span>
        </h5>
        <div class="owner-actions">
          <button class="btn btn-sm btn-warning edit-patient-btn glow-btn">✏️ Bearbeiten</button>
          <button class="btn btn-sm btn-danger delete-patient-btn glow-btn">🗑️ Löschen</button>
          <button type="button" class="btn-close ms-2" data-bs-dismiss="modal"></button>
        </div>
      </div>

      <div class="modal-body owner-body">
        <div id="patientInfo" class="glass-slab mb-3">
          <p class="text-muted">⏳ Lade Patientendaten...</p>
        </div>

        <ul class="nav nav-tabs owner-tabs mt-3" role="tablist">
          <li class="nav-item"><a class="nav-link active" data-bs-toggle="tab" href="#tab-treatments">💊 Behandlungen</a></li>
          <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#tab-invoices">💰 Rechnungen</a></li>
          <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#tab-notes">📝 Notizen</a></li>
        </ul>

        <div class="tab-content p-3">
          <div class="tab-pane fade show active" id="tab-treatments">
            <ul class="list-group fancy-list" id="treatmentsList"></ul>
          </div>
          <div class="tab-pane fade" id="tab-invoices">
            <ul class="list-group fancy-list" id="invoicesList"></ul>
          </div>
          <div class="tab-pane fade" id="tab-notes">
            <ul class="list-group fancy-list" id="notesList"></ul>
          </div>
        </div>
      </div>

      <div class="modal-footer owner-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">❌ Schließen</button>
      </div>
    </div>
  </div>
</div>

<!-- ==== JS Modal Funktionen ==== -->
<script>
document.addEventListener("DOMContentLoaded", function() {
  const API_URL = 'api/patients_api.php';
  let currentPatientId = null;

  async function apiPost(payload) {
    const res = await fetch(API_URL, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload)
    });
    return res.json();
  }

  function renderTreatments(list) {
    const ul = document.getElementById('treatmentsList');
    ul.innerHTML = "";
    if (!list.length) { ul.innerHTML = "<li class='list-group-item text-muted'>Keine Behandlungen</li>"; return; }
    list.forEach(a => {
      const li = document.createElement('li');
      li.className = "list-group-item d-flex justify-content-between align-items-center";
      li.innerHTML = `
        <span>🗓️ ${a.appointment_display} – ${a.notes ?? "-"}</span>
        <div>
          <button class="btn btn-sm btn-warning edit-treatment-btn glow-btn" data-id="${a.id}">✏️</button>
          <button class="btn btn-sm btn-danger delete-treatment-btn glow-btn" data-id="${a.id}">🗑️</button>
        </div>`;
      ul.appendChild(li);
    });
  }

  function renderInvoices(list) {
    const ul = document.getElementById('invoicesList');
    ul.innerHTML = "";
    if (!list.length) { ul.innerHTML = "<li class='list-group-item text-muted'>Keine Rechnungen</li>"; return; }
    list.forEach(inv => {
      const li = document.createElement('li');
      li.className = "list-group-item d-flex justify-content-between align-items-center";
      li.innerHTML = `
        <span>#${inv.id} – ${inv.amount} € <span class="badge bg-glass ms-1">${inv.created_display}</span></span>
        <button class="btn btn-sm btn-warning glow-btn toggle-invoice-btn" data-id="${inv.id}" data-status="${inv.status}">
          ${inv.status === 'paid' ? '↩️ Offen' : '✅ Bezahlt'}
        </button>`;
      ul.appendChild(li);
    });
  }

  function renderNotes(list) {
    const ul = document.getElementById('notesList');
    ul.innerHTML = "";
    if (!list.length) { ul.innerHTML = "<li class='list-group-item text-muted'>Keine Notizen</li>"; return; }
    list.forEach(n => {
      const li = document.createElement('li');
      li.className = "list-group-item d-flex justify-content-between align-items-center";
      li.innerHTML = `
        <span>📝 ${n.content} <span class="badge bg-glass ms-1">${n.created_display}</span></span>
        <div>
          <button class="btn btn-sm btn-warning edit-note-btn glow-btn" data-id="${n.id}" data-content="${n.content}">✏️</button>
          <button class="btn btn-sm btn-danger delete-note-btn glow-btn" data-id="${n.id}">🗑️</button>
        </div>`;
      ul.appendChild(li);
    });
  }

  document.querySelectorAll('.open-patient-modal').forEach(btn => {
    btn.addEventListener('click', async function() {
      currentPatientId = this.dataset.patient;
      const modal = new bootstrap.Modal(document.getElementById('patientModal'));
      modal.show();

      const info = document.getElementById('patientInfo');
      info.innerHTML = "<p class='text-muted'>⏳ Lade Daten...</p>";

      const data = await apiPost({ action: 'get_patient_details', patient_id: currentPatientId });
      if (!data.success) {
        info.innerHTML = "<p class='text-danger'>❌ Fehler: " + data.error + "</p>";
        return;
      }

      document.getElementById('patientName').innerText = data.patient.name;
      if (data.patient.image) {
        document.getElementById('patientAvatar').innerHTML = `<img src="${data.patient.image}" class="rounded-circle" style="height:40px;width:40px;object-fit:cover;">`;
      } else {
        document.getElementById('patientAvatar').innerText = "🐾";
      }

      info.innerHTML = `
        <div><strong>Art:</strong> ${data.patient.species} – ${data.patient.breed}</div>
        <div><strong>Besitzer:</strong> ${data.owner.firstname} ${data.owner.lastname}</div>
        <div><strong>Geburtsdatum:</strong> ${data.patient.birthdate ?? "-"} 
             <span class="badge badge-glass badge-paid">${data.patient.age_years ?? "-"} J.</span></div>
        <div><strong>Symptome:</strong> ${data.patient.symptoms ?? "-"}</div>
      `;

      renderTreatments(data.appointments);
      renderInvoices(data.invoices);
      renderNotes(data.notes);
    });
  });

  // --- Events ---
  document.addEventListener('click', async e => {
    if (e.target.classList.contains('delete-treatment-btn')) {
      await apiPost({ action: 'delete_treatment', id: e.target.dataset.id, patient_id: currentPatientId });
      const data = await apiPost({ action: 'get_patient_details', patient_id: currentPatientId });
      renderTreatments(data.appointments);
    }
    if (e.target.classList.contains('edit-treatment-btn')) {
      const newText = prompt("Neue Notiz eingeben:");
      if (newText) {
        await apiPost({ action: 'edit_treatment', id: e.target.dataset.id, notes: newText, patient_id: currentPatientId });
        const data = await apiPost({ action: 'get_patient_details', patient_id: currentPatientId });
        renderTreatments(data.appointments);
      }
    }
    if (e.target.classList.contains('delete-note-btn')) {
      await apiPost({ action: 'delete_note', patient_id: currentPatientId, note_id: e.target.dataset.id });
      const data = await apiPost({ action: 'get_patient_details', patient_id: currentPatientId });
      renderNotes(data.notes);
    }
    if (e.target.classList.contains('edit-note-btn')) {
      const old = e.target.dataset.content;
      const newContent = prompt("Neue Notiz eingeben:", old);
      if (newContent && newContent !== old) {
        await apiPost({ action: 'edit_note', id: e.target.dataset.id, patient_id: currentPatientId, content: newContent });
        const data = await apiPost({ action: 'get_patient_details', patient_id: currentPatientId });
        renderNotes(data.notes);
      }
    }
    if (e.target.classList.contains('toggle-invoice-btn')) {
      const id = e.target.dataset.id;
      const newStatus = e.target.dataset.status === 'paid' ? 'open' : 'paid';
      await apiPost({ action: 'edit_invoice_status', id: id, status: newStatus, patient_id: currentPatientId });
      const data = await apiPost({ action: 'get_patient_details', patient_id: currentPatientId });
      renderInvoices(data.invoices);
    }
  });
});
</script>
{% endblock %}