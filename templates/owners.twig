{% extends "layout.twig" %}

{% block inner_content %}
<div class="page-breadcrumb d-none d-sm-flex align-items-center mb-3">
  <div class="breadcrumb-title pe-3">👥 Besitzerverwaltung</div>
</div>

<div class="card">
  <div class="card-body">
    <div class="table-responsive">
      <table id="ownersTable" class="table table-striped table-hover align-middle mb-0">
        <thead class="table-light">
          <tr>
            <th>#</th>
            <th>Name</th>
            <th>Kontakt</th>
            <th>Patienten</th>
            <th>Rechnungen</th>
            <th>Termine</th>
            <th style="width:180px">Aktionen</th>
          </tr>
        </thead>
        <tbody>
          {% for o in owners %}
          <tr>
            <td>{{ o.id }}</td>
            <td><strong>{{ o.firstname }} {{ o.lastname }}</strong></td>
            <td>
              📧 {{ o.email|default("-") }}<br>
              ☎️ {{ o.phone|default("-") }}
            </td>
            <td>{{ o.patient_count }}</td>
            <td>{{ o.invoice_count }}</td>
            <td>{{ o.appointment_count }}</td>
            <td>
              <button class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#ownerModal{{ o.id }}">
                🔍 Details
              </button>
            </td>
          </tr>
          {% else %}
          <tr>
            <td colspan="7" class="text-center text-muted">Keine Besitzer gefunden</td>
          </tr>
          {% endfor %}
        </tbody>
      </table>
    </div>
  </div>
</div>

{# ---------------- Owner Modals ---------------- #}
{% for o in owners %}
<div class="modal fade" id="ownerModal{{ o.id }}" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-xl modal-dialog-centered">
    <div class="modal-content owner-modal">
      <div class="modal-header owner-header d-flex justify-content-between align-items-center">
        <h5 class="modal-title owner-title">
          <span class="owner-avatar">👤</span>
          <span>{{ o.firstname }} {{ o.lastname }}</span>
        </h5>

        <span class="badge {{ o.open_invoices > 0 ? 'badge-glass badge-open' : 'badge-glass badge-paid' }}">
          {{ o.open_invoices > 0 ? '⏳ ' ~ o.open_invoices ~ ' offene Rechnung(en)' : '✅ Alle bezahlt' }}
        </span>

        <div class="owner-actions">
          <button class="btn btn-sm btn-warning edit-owner-btn glow-btn" data-owner="{{ o.id }}">✏️ Bearbeiten</button>
          <button class="btn btn-sm btn-danger delete-owner-btn glow-btn" data-owner="{{ o.id }}">🗑️ Löschen</button>
          <button type="button" class="btn-close ms-2" data-bs-dismiss="modal"></button>
        </div>
      </div>

      <div class="modal-body owner-body">
        <!-- Kontaktinfos (View) -->
        <div id="ownerInfo{{ o.id }}" class="owner-contact glass-slab">
          <div class="row g-3">
            <div class="col-md-4">
              <div class="line"><span class="ic">📧</span><span>{{ o.email|default("-") }}</span></div>
              <div class="line"><span class="ic">☎️</span><span>{{ o.phone|default("-") }}</span></div>
            </div>
            <div class="col-md-8">
              <div class="line"><span class="ic">📍</span><span>{{ o.street|default("") }}, {{ o.zipcode|default("") }} {{ o.city|default("") }}</span></div>
            </div>
          </div>
        </div>

        <!-- Bearbeitungsformular (Edit) -->
        <form class="edit-owner-form d-none glass-slab" id="editOwnerForm{{ o.id }}" data-owner="{{ o.id }}">
          <div class="row g-2">
            <div class="col-md-6">
              <label class="form-label tiny-label">E-Mail</label>
              <input type="email" class="form-control glass-input" name="email" value="{{ o.email }}" placeholder="E-Mail">
            </div>
            <div class="col-md-6">
              <label class="form-label tiny-label">Telefon</label>
              <input type="text" class="form-control glass-input" name="phone" value="{{ o.phone }}" placeholder="Telefon">
            </div>
            <div class="col-md-6">
              <label class="form-label tiny-label">Straße</label>
              <input type="text" class="form-control glass-input" name="street" value="{{ o.street }}" placeholder="Straße">
            </div>
            <div class="col-md-3">
              <label class="form-label tiny-label">PLZ</label>
              <input type="text" class="form-control glass-input" name="zipcode" value="{{ o.zipcode }}" placeholder="PLZ">
            </div>
            <div class="col-md-3">
              <label class="form-label tiny-label">Stadt</label>
              <input type="text" class="form-control glass-input" name="city" value="{{ o.city }}" placeholder="Stadt">
            </div>
          </div>
          <div class="mt-3 d-flex gap-2">
            <button type="submit" class="btn btn-success btn-sm glow-btn">💾 Speichern</button>
            <button type="button" class="btn btn-secondary btn-sm cancel-edit-btn">Abbrechen</button>
          </div>
        </form>

        <!-- Tabs -->
        <ul class="nav nav-tabs owner-tabs mt-3" role="tablist">
          <li class="nav-item"><a class="nav-link active" data-bs-toggle="tab" href="#patients{{ o.id }}">🐾 Patienten</a></li>
          <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#appointments{{ o.id }}">📅 Termine</a></li>
          <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#invoices{{ o.id }}">💰 Rechnungen</a></li>
          <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#notes{{ o.id }}">📝 Notizen</a></li>
        </ul>

        <div class="tab-content p-3">

          <!-- Patienten -->
          <div class="tab-pane fade show active" id="patients{{ o.id }}">
            <ul class="list-group fancy-list">
              {% for p in details[o.id].patients %}
              <li class="list-group-item d-flex justify-content-between align-items-center">
                <span class="rowline"><i>🐕</i> <strong>{{ p.name }}</strong> <span class="muted">({{ p.species }} – {{ p.breed }})</span></span>
                <a href="patient.php?id={{ p.id }}" class="btn btn-sm btn-outline-info glow-outline">➡️ Profil</a>
              </li>
              {% else %}
              <li class="list-group-item text-muted">Keine Patienten vorhanden</li>
              {% endfor %}
            </ul>
          </div>

          <!-- Termine -->
          <div class="tab-pane fade" id="appointments{{ o.id }}">
            <ul class="list-group fancy-list">
              {% for a in details[o.id].appointments %}
              <li class="list-group-item">
                <div class="rowline">
                  <i>🗓️</i>
                  <strong>{{ a.appointment_date|date("d.m.Y H:i") }}</strong> – {{ a.patient_name }}
                </div>
                <div class="muted small">{{ a.notes|default("Keine Notizen") }}</div>
              </li>
              {% else %}
              <li class="list-group-item text-muted">Keine Termine vorhanden</li>
              {% endfor %}
            </ul>
          </div>

          <!-- Rechnungen -->
          <div class="tab-pane fade" id="invoices{{ o.id }}">
            <ul class="list-group fancy-list">
              {% for inv in details[o.id].invoices %}
              <li class="list-group-item d-flex justify-content-between align-items-center">
                <div class="rowline">
                  <i>🧾</i>
                  <span>#{{ inv.id }}</span> – <span>{{ inv.patient_name }}</span> – <strong>{{ inv.amount|number_format(2, ',', '.') }} €</strong>
                </div>
                <span class="badge {{ inv.status == 'paid' ? 'badge-glass badge-paid' : 'badge-glass badge-open' }}">
                  {{ inv.status == 'paid' ? '✅ Bezahlt' : '⏳ Offen' }}
                </span>
              </li>
              {% else %}
              <li class="list-group-item text-muted">Keine Rechnungen vorhanden</li>
              {% endfor %}
            </ul>
            <a href="invoices.php" class="btn btn-primary btn-sm mt-3 glow-btn">➡️ Zur Rechnungsübersicht</a>
          </div>

          <!-- Notizen -->
          <div class="tab-pane fade" id="notes{{ o.id }}">
            <form class="owner-note-form mb-3 glass-slab" data-owner="{{ o.id }}">
              <label class="form-label tiny-label">Neue Notiz</label>
              <textarea name="note_content" class="form-control glass-input mb-2" rows="3" placeholder="Notiz eingeben…" required></textarea>
              <button type="submit" class="btn btn-success glow-btn">💾 Speichern</button>
            </form>

            <ul class="list-group owner-notes-list fancy-list" id="notesList{{ o.id }}">
              {% for n in details[o.id].notes %}
              <li class="list-group-item d-flex justify-content-between align-items-start">
                <div>
                  <div class="rowline"><i>📝</i> {{ n.content }}</div>
                  <div class="muted small">📅 {{ n.created_at|date("d.m.Y H:i") }}</div>
                </div>
                <button class="btn btn-sm btn-danger delete-note-btn glow-btn" data-note="{{ n.id }}" data-owner="{{ o.id }}">🗑️ Löschen</button>
              </li>
              {% else %}
              <li class="list-group-item text-muted">Keine Notizen vorhanden</li>
              {% endfor %}
            </ul>
          </div>

        </div>
      </div>

      <div class="modal-footer owner-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">❌ Schließen</button>
      </div>
    </div>
  </div>
</div>
{% endfor %}

<!-- DataTable + AJAX -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  // DataTable
  if (window.jQuery && $.fn.DataTable) {
    $('#ownersTable').DataTable({
      pageLength: 10,
      order: [[1, 'asc']],
      language: { url: '//cdn.datatables.net/plug-ins/1.13.4/i18n/de-DE.json' }
    });
  }

  const API_URL = 'api/owners_api.php';

  async function apiPost(payload) {
    const res = await fetch(API_URL, {
      method: 'POST',
      credentials: 'same-origin',
      headers: {
        'Content-Type': 'application/json',
        'X-Requested-With': 'XMLHttpRequest'
      },
      body: JSON.stringify(payload)
    });

    const text = await res.text();
    const ct = res.headers.get('Content-Type') || '';
    if (!ct.includes('application/json')) {
      throw new Error('Antwort kein JSON: ' + text);
    }
    const data = JSON.parse(text);
    if (!res.ok || data.success === false) {
      throw new Error(data.error || ('HTTP ' + res.status));
    }
    return data;
  }

  // Bearbeiten anzeigen
  document.querySelectorAll('.edit-owner-btn').forEach(btn => {
    btn.addEventListener('click', function() {
      const id = this.dataset.owner;
      document.getElementById('ownerInfo' + id).classList.add('d-none');
      document.getElementById('editOwnerForm' + id).classList.remove('d-none');
    });
  });

  // Bearbeiten abbrechen
  document.querySelectorAll('.cancel-edit-btn').forEach(btn => {
    btn.addEventListener('click', function() {
      const id = this.closest('form').dataset.owner;
      document.getElementById('ownerInfo' + id).classList.remove('d-none');
      document.getElementById('editOwnerForm' + id).classList.add('d-none');
    });
  });

  // Besitzer speichern
  document.querySelectorAll('.edit-owner-form').forEach(form => {
    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      const id = this.dataset.owner;
      const data = Object.fromEntries(new FormData(this));
      try {
        const res = await apiPost({ action: 'edit_owner', owner_id: id, ...data });
        const info = document.getElementById('ownerInfo' + id);
        info.innerHTML = `
          <div class="row g-3">
            <div class="col-md-4">
              <div class="line"><span class="ic">📧</span><span>${res.owner.email || '-'}</span></div>
              <div class="line"><span class="ic">☎️</span><span>${res.owner.phone || '-'}</span></div>
            </div>
            <div class="col-md-8">
              <div class="line"><span class="ic">📍</span><span>${res.owner.street || ''}, ${res.owner.zipcode || ''} ${res.owner.city || ''}</span></div>
            </div>
          </div>
        `;
        info.classList.remove('d-none');
        this.classList.add('d-none');
        Lobibox.notify('success', { msg: res.msg, position: 'top right' });
      } catch (err) {
        Lobibox.notify('error', { msg: '❌ ' + err.message, position: 'top right' });
      }
    });
  });

  // Besitzer löschen
  document.querySelectorAll('.delete-owner-btn').forEach(btn => {
    btn.addEventListener('click', async function() {
      const id = this.dataset.owner;
      if (!confirm('Besitzer wirklich löschen?')) return;
      try {
        const res = await apiPost({ action: 'delete_owner', owner_id: id });
        Lobibox.notify('success', { msg: res.msg, position: 'top right' });
        document.querySelector(`[data-owner="${id}"]`)?.closest('tr')?.remove();
        bootstrap.Modal.getOrCreateInstance(document.getElementById('ownerModal' + id)).hide();
      } catch (err) {
        Lobibox.notify('error', { msg: '❌ ' + err.message, position: 'top right' });
      }
    });
  });

  // Notiz hinzufügen
  document.querySelectorAll('.owner-note-form').forEach(form => {
    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      const id = this.dataset.owner;
      const ta = this.querySelector('textarea[name="note_content"]');
      const content = (ta?.value || '').trim();
      if (!content) return;
      try {
        const res = await apiPost({ action: 'add_note', owner_id: id, note_content: content });
        const list = document.getElementById('notesList' + id);
        const li = document.createElement('li');
        li.className = 'list-group-item d-flex justify-content-between align-items-start';
        li.innerHTML = `
          <div>
            <div class="rowline"><i>📝</i> ${res.note.content}</div>
            <div class="muted small">📅 ${res.note.created_at}</div>
          </div>
          <button class="btn btn-sm btn-danger delete-note-btn glow-btn" data-note="${res.note.id}" data-owner="${id}">🗑️ Löschen</button>
        `;
        list.prepend(li);
        this.reset();
        Lobibox.notify('success', { msg: '✅ Notiz gespeichert', position: 'top right' });
      } catch (err) {
        Lobibox.notify('error', { msg: '❌ ' + err.message, position: 'top right' });
      }
    });
  });

  // Notiz löschen (Delegation)
  document.addEventListener('click', async function(e) {
    if (!e.target.classList.contains('delete-note-btn')) return;
    const noteId = e.target.dataset.note;
    const ownerId = e.target.dataset.owner;
    if (!confirm('Notiz wirklich löschen?')) return;
    try {
      const res = await apiPost({ action: 'delete_note', owner_id: ownerId, note_id: noteId });
      e.target.closest('li')?.remove();
      Lobibox.notify('success', { msg: res.msg, position: 'top right' });
    } catch (err) {
      Lobibox.notify('error', { msg: '❌ ' + err.message, position: 'top right' });
    }
  });
});
</script>

<!-- ==== Neon Glass / Glow Styles ==== -->
<style>
:root{
  --bg:#0c1117;
  --glass:rgba(255,255,255,0.06);
  --glass-strong:rgba(255,255,255,0.12);
  --txt:#e6f1ff;
  --muted:#9fb3c8;
  --accent:#00e7ff;
  --accent-2:#6ef7c8;
  --danger:#ff5c8d;
  --success:#00ff88;
}

.owner-modal{
  background: linear-gradient(180deg, rgba(10,14,20,.96), rgba(7,10,14,.96));
  color: var(--txt);
  border-radius: 16px;
  border: 1px solid rgba(255,255,255,.08);
  box-shadow:
    0 20px 60px rgba(0,0,0,.6),
    inset 0 0 0 1px rgba(255,255,255,.03);
  overflow: hidden;
  position: relative;
}
.owner-modal:before{
  content:'';
  position:absolute; inset:-1px;
  background: radial-gradient(1200px 300px at -10% -10%, rgba(0,231,255,.20), transparent 60%),
              radial-gradient(800px 250px at 110% -10%, rgba(110,247,200,.18), transparent 60%);
  pointer-events:none;
}
.owner-header{
  background: linear-gradient(90deg, rgba(20,25,35,.75), rgba(10,14,20,.75));
  border-bottom: 1px solid rgba(255,255,255,.08);
  position: relative;
}
.owner-header:after{
  content:'';
  position:absolute; top:0; left:-40%;
  width:35%; height:100%;
  background: linear-gradient(120deg, transparent, rgba(255,255,255,.15), transparent);
  transform: skewX(-20deg);
  animation: shine 6s infinite;
  pointer-events:none;
  filter: blur(6px);
}
@keyframes shine{ 0%{ left:-40% } 60%{ left:120% } 100%{ left:120% } }

.owner-title{
  display:flex; align-items:center; gap:.6rem; margin:0;
  font-weight:700; letter-spacing:.2px;
}
.owner-avatar{
  width:36px;height:36px;display:inline-grid;place-items:center;
  border-radius:50%;
  background: radial-gradient(circle at 30% 30%, rgba(0,231,255,.35), rgba(0,0,0,.2));
  box-shadow: 0 0 18px rgba(0,231,255,.6), inset 0 0 10px rgba(0,231,255,.15);
  font-size: 18px;
}

.owner-actions .btn{ margin-left:6px; }

.owner-body{ padding-top: 1.25rem; }
.owner-footer{
  background: rgba(255,255,255,.03);
  border-top: 1px solid rgba(255,255,255,.08);
}

/* glass blocks */
.glass-slab{
  background: var(--glass);
  border: 1px solid rgba(255,255,255,.08);
  border-radius: 12px;
  padding: 12px 14px;
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  box-shadow: inset 0 0 0 1px rgba(255,255,255,.02), 0 10px 24px rgba(0,0,0,.25);
  transition: transform .15s ease, box-shadow .15s ease;
}
.glass-slab:hover{ transform: translateY(-1px); box-shadow: inset 0 0 0 1px rgba(255,255,255,.02), 0 14px 30px rgba(0,0,0,.32); }

.owner-contact .line{
  display:flex; align-items:center; gap:.6rem;
  padding:6px 0; border-bottom:1px dashed rgba(255,255,255,.06);
}
.owner-contact .line:last-child{ border-bottom:0; }
.ic{ filter: drop-shadow(0 0 6px rgba(0,231,255,.6)); }

.tiny-label{ font-size:.75rem; color:var(--muted); letter-spacing:.3px; }
.glass-input{
  background: rgba(255,255,255,.06)!important;
  color: var(--txt)!important;
  border: 1px solid rgba(255,255,255,.12)!important;
  box-shadow: inset 0 0 0 1px rgba(255,255,255,.03);
}
.glass-input:focus{
  border-color: rgba(0,231,255,.45)!important;
  box-shadow: 0 0 0 3px rgba(0,231,255,.18)!important;
}

/* tabs */
.owner-tabs .nav-link{
  color: var(--muted);
  border: none;
  margin-right: 6px;
  border-radius: 8px;
}
.owner-tabs .nav-link.active{
  color:#001114;
  background: linear-gradient(90deg, var(--accent), var(--accent-2));
  font-weight:600;
  box-shadow: 0 0 18px rgba(0,231,255,.35);
}

/* list look */
.fancy-list .list-group-item{
  background: rgba(255,255,255,.04);
  border: 1px solid rgba(255,255,255,.06);
  color: var(--txt);
  border-radius: 10px;
  margin-bottom: 8px;
  display: block;
}
.fancy-list .list-group-item:hover{
  background: rgba(255,255,255,.065);
  box-shadow: 0 8px 20px rgba(0,0,0,.25), 0 0 12px rgba(0,231,255,.18);
}
.rowline{ display:flex; align-items:center; gap:.5rem; }
.rowline i{ filter: drop-shadow(0 0 6px rgba(0,231,255,.55)); font-style: normal; }
.muted{ color: var(--muted); }

/* glow badges */
.badge-glass{
  display:inline-block; padding:6px 14px; border-radius: 12px;
  font-weight:700; font-size:.9rem; letter-spacing:.3px;
  color:#fff; backdrop-filter: blur(10px); -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(255,255,255,.2);
  box-shadow: inset 0 0 0 1px rgba(255,255,255,.08);
  animation: breath 2.8s ease-in-out infinite;
}
.badge-paid{
  background: rgba(0,200,83,.20);
  color: var(--success);
  text-shadow: 0 0 8px rgba(0,255,136,.9);
  box-shadow: 0 0 16px rgba(0,255,136,.35), inset 0 0 0 1px rgba(0,255,136,.15);
}
.badge-open{
  background: rgba(255,82,82,.18);
  color: var(--danger);
  text-shadow: 0 0 8px rgba(255,92,141,.9);
  box-shadow: 0 0 16px rgba(255,92,141,.35), inset 0 0 0 1px rgba(255,92,141,.15);
}
@keyframes breath {
  0%,100%{ transform: translateZ(0) scale(1); }
  50%{ transform: translateZ(0) scale(1.03); }
}

/* glow buttons */
.glow-btn{
  position: relative;
  border: 1px solid rgba(255,255,255,.18) !important;
  box-shadow: 0 0 0 1px rgba(255,255,255,.05) inset, 0 8px 18px rgba(0,0,0,.25);
  transition: transform .12s ease, box-shadow .12s ease;
}
.glow-btn:hover{
  transform: translateY(-1px);
  box-shadow: 0 0 12px rgba(0,231,255,.35), 0 10px 22px rgba(0,0,0,.3);
}
.glow-outline{
  border-color: rgba(0,231,255,.45)!important;
  color: var(--txt)!important;
  box-shadow: 0 0 0 2px rgba(0,231,255,.25);
}

/* bootstrap tweaks on dark */
.btn-primary{ background: linear-gradient(90deg, var(--accent), var(--accent-2)); border: none; color:#001114; }
.btn-warning{ color:#221; }
.btn-danger{ color:#fee; }
.btn-secondary{ background: rgba(255,255,255,.08); border:1px solid rgba(255,255,255,.18); }
.table-hover tbody tr:hover{ background: rgba(0,231,255,.06); }
</style>
{% endblock %}